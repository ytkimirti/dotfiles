let mapleader=" "

" NOTE: Use :actionlist <pattern> to search for actions for
" or use

" Plugins
set visualbell
set txtobj-entire
" set ReplaceWithRegister
set scrolloff=5
set incsearch
set ignorecase
set smartcase
set ideajoin
set invhlsearch
set surround

" You can now dia daa caa etc.
set argtextobj
let g:argtextobj_pairs="(:),{:},<:>"

map J <Action>(MethodDown)
map K <Action>(MethodUp)

" Visual mode
map <leader>v <c-v>
map <leader>h :nohl<CR>


"Copying and pasting
" map p pgvy
" map P Pgvy
nnoremap <leader>p "*p
nnoremap <leader>P "*P
nnoremap Y "*y
vnoremap Y "*y

map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)

" IntelliJ-specific Actions
" -------------------------

map <leader>i <Action>(QuickImplementations)

" Navigation
nmap <leader>o     :action GotoFile<CR>
nmap <leader>r     :action RecentFiles<CR>
nmap <leader>f     :action FileStructurePopup<CR>
nmap <leader>F     :action GotoSymbol<CR>

" Other
map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>d <Action>(QuickJavaDoc)
map <leader>e <Action>(ShowErrorDescription)

" Git actions
nmap <leader>gm <Action>(Git.Menu)
nmap <leader>gq <Action>(Vcs.QuickListPopupAction)
map <leader>ga <Action>(Annotate)

nmap <leader>w     <Action>(SaveDocument)
nmap <leader>q     :q<CR>
map <leader>z <Action>(ToggleDistractionFreeMode)


map q <Action>(EditorSelectWord)
